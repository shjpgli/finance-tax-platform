<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.abc12366.uc.mapper.db1.UserMapper">
    <insert id="insert" parameterType="com.abc12366.uc.model.User">
        insert into uc_user (id, username, phone, password, regMail, regIP, salt, nickname, status, createTime,
        lastUpdate, userPicturePath, maxUserPicturePath, midUserPicturePath, minUserPicturePath, points, exp, vipLevel, usernameModifiedTimes)
        values (#{id}, #{username}, #{phone},#{password}, #{regMail}, #{regIP}, #{salt}, #{nickname}, #{status},
        #{createTime}, #{lastUpdate}, #{userPicturePath}, #{maxUserPicturePath}, #{midUserPicturePath},
        #{minUserPicturePath}, #{points}, #{exp}, #{vipLevel} ,#{usernameModifiedTimes})
    </insert>

    <update id="update" parameterType="com.abc12366.uc.model.User">
        update uc_user
        <set>
            <if test="username != null">username = #{username},</if>
            <if test="regMail != null">regMail = #{regMail},</if>
            <if test="regIP != null">regIP = #{regIP},</if>
            <if test="salt != null">salt = #{salt},</if>
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="status != null">status = #{status},</if>
            <if test="lastUpdate != null">lastUpdate = #{lastUpdate},</if>
            <if test="userPicturePath != null">userPicturePath = #{userPicturePath},</if>
            <if test="maxUserPicturePath != null">maxUserPicturePath = #{maxUserPicturePath},</if>
            <if test="midUserPicturePath != null">midUserPicturePath = #{midUserPicturePath},</if>
            <if test="minUserPicturePath != null">minUserPicturePath = #{minUserPicturePath},</if>
            <if test="points != null">points = #{points},</if>
            <if test="exp != null">exp = #{exp},</if>
            <if test="vipLevel != null">vipLevel = #{vipLevel},</if>
            <if test="usernameModifiedTimes != null">usernameModifiedTimes = #{usernameModifiedTimes},</if>
            <if test="vipExpireDate != null">vipExpireDate = #{vipExpireDate},</if>
            <if test="wxopenid != null">wxopenid = #{wxopenid},</if>
            <if test="wxheadimg != null">wxheadimg = #{wxheadimg},</if>
            <if test="wxnickname != null">wxnickname = #{wxnickname},</if>
            <if test="bdqudao != null">bdqudao = #{bdqudao},</if>
            <if test="amount != null">amount = #{amount},</if>
        </set>
        where id=#{id}
    </update>
    
    <update id="qxwxbd" parameterType="java.lang.String">
        update uc_user set wxopenid=null,wxheadimg=null,wxnickname=null where wxopenid=#{wxopenid}
    </update>

    <update id="updateBatch" parameterType="java.util.Map">
        UPDATE uc_user
        <set>
            vipLevel = #{vipLevel},
            lastUpdate = now()
        </set>
        WHERE id IN
        <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <update id="updatePhone" parameterType="com.abc12366.uc.model.User">
        update uc_user
        <set>
            phone = #{phone}
            <if test="lastUpdate != null">,lastUpdate = #{lastUpdate}</if>
            <if test="username != null">,username = #{username}</if>
        </set>
        where id=#{id}
    </update>

    <delete id="delete" parameterType="java.lang.String">
        delete from uc_user
        where id=#{id}
    </delete>

    <delete id="deleteContinuePwdWrong" parameterType="java.lang.String">
        delete from uc_login_password_wrong_count
        where userId = #{userId}
    </delete>
    <insert id="insertContinuePwdWrong" parameterType="com.abc12366.uc.model.UserLoginPasswordWrongCount">
        insert into uc_login_password_wrong_count(id, userId, count, limitTime)
        values(#{id},#{userId},#{count},#{limitTime})
    </insert>
    <update id="updateContinuePwdWrong" parameterType="com.abc12366.uc.model.UserLoginPasswordWrongCount">
        update uc_login_password_wrong_count
        <set>
            <if test="count != null">count = #{count},</if>
            <if test="limitTime != null">limitTime = #{limitTime}</if>
        </set>
        where userId=#{userId}
    </update>

    <update id="updatePassword" parameterType="com.abc12366.uc.model.User">
        update uc_user
        <set>
            <if test="password != null">password = #{password},</if>
            <if test="lastUpdate != null">lastUpdate = #{lastUpdate},</if>
        </set>
        where id=#{id}
    </update>

    <resultMap type="com.abc12366.uc.model.bo.UserRetainedRateBO" id="resultMap">
        <result column="userCount" property="userCount" jdbcType="INTEGER"/>
        <result column="rateCount" property="rateCount" jdbcType="INTEGER"/>
        <result column="rate" property="rate" jdbcType="DOUBLE"/>
    </resultMap>
    <!-- 获取留存率 -->
    <select id="statisUserRetainedRate" parameterType="java.util.Map" resultMap="resultMap" statementType="CALLABLE">
        {call getUserRetentionRate(
        #{startTime,jdbcType=TIMESTAMP,mode=IN},
        #{number,jdbcType=VARCHAR,mode=IN}
        )
        }
    </select>
    
    <select id="selectByUsernameOrPhone" resultType="com.abc12366.uc.model.User"
            parameterType="com.abc12366.uc.model.bo.LoginBO">
        select uu.id, uu.username, uu.password, uu.phone, uu.regMail, uu.regIP, uu.salt, uu.nickname, uu.status,
        uu.createTime, uu.lastUpdate,uu.userPicturePath, uu.maxUserPicturePath, uu.midUserPicturePath,
        uu.minUserPicturePath, uu.points, uu.exp,uu.vipLevel,uu.usernameModifiedTimes,uu.vipExpireDate,
        uu.wxopenid,uu.wxheadimg,uu.wxnickname,uu.oldId,
        (select uul.level from uc_uvip_level uul where uul.levelCode = uu.vipLevel limit 1) vipLevelName,
        IFNULL(
        (SELECT uul.name FROM uc_uexp_level uul WHERE uul.status='1' AND uu.exp &gt;= uul.minValue AND uu.exp &lt;= uul.maxValue LIMIT 1),
        (SELECT uul.name FROM uc_uexp_level uul WHERE uul.status='1' AND uul.minValue &gt;= (SELECT MAX(uull.minValue) FROM uc_uexp_level uull WHERE uull.status='1' LIMIT 1) AND uul.minValue &lt;=uu.exp)
        ) level,
        IFNULL(
        (SELECT uul.medal FROM uc_uexp_level uul WHERE uul.status='1' AND uu.exp &gt;= uul.minValue AND uu.exp &lt;= uul.maxValue LIMIT 1),
        (SELECT uul.medal FROM uc_uexp_level uul WHERE uul.status='1' AND uul.minValue &gt;=(SELECT MAX(uull.minValue) FROM uc_uexp_level uull WHERE uull.status='1' LIMIT 1) AND uul.minValue &lt;=uu.exp)
        ) levelName
        from uc_user uu
        <where>
            <if test="usernameOrPhone != null">
                uu.username = #{usernameOrPhone}
            </if>
            <if test="usernameOrPhone != null">
                OR uu.phone = #{usernameOrPhone}
            </if>
        </where>
    </select>
</mapper>