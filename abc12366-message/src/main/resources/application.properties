# \u670D\u52A1\u5E94\u7528\u540D\u79F0
spring.application.name=abc12366-message
# \u670D\u52A1\u5E94\u7528\u7AEF\u53E3
server.port = 9200
# \u670D\u52A1\u5E94\u7528\u4E0A\u4E0B\u6587\u8DEF\u5F84
server.context-path=/message

# redis\u96C6\u7FA4\u914D\u7F6E
spring.redis.cluster.nodes[0]=118.118.116.202:7000
spring.redis.cluster.nodes[1]=118.118.116.202:7001
spring.redis.cluster.nodes[2]=118.118.116.202:7002
spring.redis.cluster.nodes[3]=118.118.116.202:7003
spring.redis.cluster.nodes[4]=118.118.116.202:7004
spring.redis.cluster.nodes[5]=118.118.116.202:7005
spring.redis.cluster.max-redirects=6
spring.redis.password=foobared
# redis\u5355\u673A\u914D\u7F6E
#spring.redis.host=localhost
#spring.redis.port=6379

# kafka\u96C6\u7FA4\u914D\u7F6E
spring.kafka.bootstrap-servers=118.118.116.202:9092
# kafka\u6D88\u8D39\u8005groupid
spring.kafka.consumer.group-id=abc12366_message_group


# mysql
spring.datasource.db1.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.db1.url=jdbc:mysql://118.118.116.202:3306/abc12366_message?characterEncoding=utf8
spring.datasource.db1.username=abc12366
spring.datasource.db1.password=abc12366
spring.datasource.db1.driverClassName=com.mysql.jdbc.Driver
# \u4E0B\u9762\u4E3A\u8FDE\u63A5\u6C60\u7684\u8865\u5145\u8BBE\u7F6E\uFF0C\u5E94\u7528\u5230\u4E0A\u9762\u6240\u6709\u6570\u636E\u6E90\u4E2D
# \u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
spring.datasource.db1.initialSize=5
spring.datasource.db1.minIdle=5
spring.datasource.db1.maxActive=20
# \u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource.db1.maxWait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.db1.timeBetweenEvictionRunsMillis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.db1.minEvictableIdleTimeMillis=300000
spring.datasource.db1.validationQuery=SELECT 'x'
spring.datasource.db1.testWhileIdle=true
spring.datasource.db1.testOnBorrow=false
spring.datasource.db1.testOnReturn=false
# \u6253\u5F00PSCache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F
spring.datasource.db1.poolPreparedStatements=true
spring.datasource.db1.maxPoolPreparedStatementPerConnectionSize=20
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.db1.filters=stat,wall,slf4j
# \u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
spring.datasource.db1.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# \u5408\u5E76\u591A\u4E2ADruidDataSource\u7684\u76D1\u63A7\u6570\u636E
spring.datasource.db1.useGlobalDataSourceStat=true

# mysql
spring.datasource.db2.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.db2.url=jdbc:mysql://118.118.116.202:3306/abc12366_message?characterEncoding=utf8
spring.datasource.db2.username=abc12366_ro
spring.datasource.db2.password=abc12366
spring.datasource.db2.driverClassName=com.mysql.jdbc.Driver
# \u4E0B\u9762\u4E3A\u8FDE\u63A5\u6C60\u7684\u8865\u5145\u8BBE\u7F6E\uFF0C\u5E94\u7528\u5230\u4E0A\u9762\u6240\u6709\u6570\u636E\u6E90\u4E2D
# \u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
spring.datasource.db2.initialSize=5
spring.datasource.db2.minIdle=5
spring.datasource.db2.maxActive=20
# \u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource.db2.maxWait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.db2.timeBetweenEvictionRunsMillis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.db2.minEvictableIdleTimeMillis=300000
spring.datasource.db2.validationQuery=SELECT 'x'
spring.datasource.db2.testWhileIdle=true
spring.datasource.db2.testOnBorrow=false
spring.datasource.db2.testOnReturn=false
# \u6253\u5F00PSCache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F
spring.datasource.db2.poolPreparedStatements=true
spring.datasource.db2.maxPoolPreparedStatementPerConnectionSize=20
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.db2.filters=stat,wall,slf4j
# \u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
spring.datasource.db2.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# \u5408\u5E76\u591A\u4E2ADruidDataSource\u7684\u76D1\u63A7\u6570\u636E
spring.datasource.db2.useGlobalDataSourceStat=true

# \u7F51\u5173\u8BFB\u5199\u6570\u636E\u5E93
spring.datasource.gw1.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.gw1.url=jdbc:mysql://118.118.116.202:3306/abc12366_gateway?characterEncoding=utf8
spring.datasource.gw1.username=abc12366
spring.datasource.gw1.password=abc12366
spring.datasource.gw1.driverClassName=com.mysql.jdbc.Driver
# \u4E0B\u9762\u4E3A\u8FDE\u63A5\u6C60\u7684\u8865\u5145\u8BBE\u7F6E\uFF0C\u5E94\u7528\u5230\u4E0A\u9762\u6240\u6709\u6570\u636E\u6E90\u4E2D
# \u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
spring.datasource.gw1.initialSize=5
spring.datasource.gw1.minIdle=5
spring.datasource.gw1.maxActive=20
# \u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource.gw1.maxWait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.gw1.timeBetweenEvictionRunsMillis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.gw1.minEvictableIdleTimeMillis=300000
spring.datasource.gw1.validationQuery=SELECT 'x'
spring.datasource.gw1.testWhileIdle=true
spring.datasource.gw1.testOnBorrow=false
spring.datasource.gw1.testOnReturn=false
# \u6253\u5F00PSCache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F
spring.datasource.gw1.poolPreparedStatements=true
spring.datasource.gw1.maxPoolPreparedStatementPerConnectionSize=20
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.gw1.filters=stat,wall,slf4j
# \u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
spring.datasource.gw1.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# \u5408\u5E76\u591A\u4E2ADruidDataSource\u7684\u76D1\u63A7\u6570\u636E
spring.datasource.gw1.useGlobalDataSourceStat=true

# \u7F51\u5173\u53EA\u8BFB\u6570\u636E\u5E93
spring.datasource.gw2.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.gw2.url=jdbc:mysql://118.118.116.202:3306/abc12366_gateway?characterEncoding=utf8
spring.datasource.gw2.username=abc12366_ro
spring.datasource.gw2.password=abc12366
spring.datasource.gw2.driverClassName=com.mysql.jdbc.Driver
# \u4E0B\u9762\u4E3A\u8FDE\u63A5\u6C60\u7684\u8865\u5145\u8BBE\u7F6E\uFF0C\u5E94\u7528\u5230\u4E0A\u9762\u6240\u6709\u6570\u636E\u6E90\u4E2D
# \u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
spring.datasource.gw2.initialSize=5
spring.datasource.gw2.minIdle=5
spring.datasource.gw2.maxActive=20
# \u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource.gw2.maxWait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.gw2.timeBetweenEvictionRunsMillis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.gw2.minEvictableIdleTimeMillis=300000
spring.datasource.gw2.validationQuery=SELECT 'x'
spring.datasource.gw2.testWhileIdle=true
spring.datasource.gw2.testOnBorrow=false
spring.datasource.gw2.testOnReturn=false
# \u6253\u5F00PSCache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F
spring.datasource.gw2.poolPreparedStatements=true
spring.datasource.gw2.maxPoolPreparedStatementPerConnectionSize=20
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.gw2.filters=stat,wall,slf4j
# \u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
spring.datasource.gw2.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# \u5408\u5E76\u591A\u4E2ADruidDataSource\u7684\u76D1\u63A7\u6570\u636E
spring.datasource.gw2.useGlobalDataSourceStat=true

# mybatis
#spring.datasource.schema=classpath:schema.sql
#spring.datasource.data=classpath:data.sql
#mybatis.config-location=classpath:mybatis-config.xml

# logback\u65E5\u5FD7\u8DEF\u5F84
logging.path=${user.home}/abc12366
# logback\u914D\u7F6E\u8DEF\u5F84
logging.config=classpath:logback-spring.xml

# \u662F\u5426\u6FC0\u6D3Bspring boot actuator
management.security.enabled=false
# spring boot actuator\u4E0A\u4E0B\u6587\u8DEF\u5F84
#management.context-path=/admin


#\u8C03\u7528\u7F51\u6613\u63A5\u53E3\u5404\u53C2\u6570
#sendcodeurl
#message.netease.url.sendcode=https://api.netease.im/sms/sendcode.action
#verifycodeurl
#message.netease.url.verifycode=https://api.netease.im/sms/verifycode.action
#sendtemplateurl
#message.netease.url.sendtemplate=https://api.netease.im/sms/sendtemplate.action
#sendtemplateurl
#message.netease.url.querystatus=https://api.netease.im/sms/querystatus.action

#\u7F51\u6613\u77ED\u4FE1\u670D\u52A1\u63A5\u53E3\u5730\u5740
message.netease.api.url=https://api.netease.im/sms
#\u7F51\u6613\u77ED\u4FE1\u670D\u52A1appKey
message.netease.appKey=749390202fdd4d9da7c53163b3581531
#\u7F51\u6613\u77ED\u4FE1\u670D\u52A1appSecret
message.netease.appSecret=1369603dc1a5
#contentType
message.netease.contentType=application/x-www-form-urlencoded
#charset
message.netease.charset=utf-8
#\u7F51\u6613\u77ED\u4FE1\u670D\u52A1\u77ED\u4FE1\u6A21\u677FID
message.netease.templateid=3059771


#\u53C8\u62CD\u4E91\u77ED\u4FE1\u63A5\u53E3\u76F8\u5173\u914D\u7F6E
message.upyun.send.url=https://sms-api.upyun.com/api/messages
#Authorization
message.upyun.auth=jXy3kmk4hshwJDmNli55vN8KZFaQjU
#template_id
message.upyun.templateid=296


#\u963F\u91CC\u4E91\u77ED\u4FE1\u63A5\u53E3\u6240\u9700\u53C2\u6570
#Access Key ID
#message.aliyun.accesskey.id=LTAItz4dVk9FX02a
#Access Key Secret
#message.aliyun.accesskey.secret=m9FiMcm2nmh7gj9uXQIx0mzNcZQzN5
#\u516C\u7F51Endpoint
#message.aliyun.endpoint=https://1759980275870473.mns.cn-shenzhen.aliyuncs.com/
#\u4E3B\u9898\u540D\u79F0
#message.aliyun.topic=sms.topic-cn-shenzhen
#\u8BA2\u9605\u540D\u79F0
#message.aliyun.subscription=sms-subscription
#\u77ED\u4FE1\u4F7F\u7528\u7B7E\u540D
#message.aliyun.signature=\u827E\u535A\u514B
#\u77ED\u4FE1\u6A21\u677Fcode
#message.aliyun.template.code=CODESMS_77775027
#\u77ED\u4FE1\u6A21\u677F\u6D88\u606F\u4F53
#message.aliyun.messagebody=\u77ED\u4FE1\u5185\u5BB9\u60A8\u7684\u9A8C\u8BC1\u7801\u4E3A\uFF1A${code} \uFF0C\u9A8C\u8BC1\u7801\u5C06\u57285\u5206\u949F\u540E\u5931\u6548\u3002

