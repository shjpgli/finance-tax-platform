# \u670d\u52a1\u5e94\u7528\u540d\u79f0
spring.application.name=abc12366-message
# \u670d\u52a1\u5e94\u7528\u7aef\u53e3
server.port = 9200
# \u670d\u52a1\u5e94\u7528\u4e0a\u4e0b\u6587\u8def\u5f84
server.context-path=/message

# \u8d22\u7a0e\u5e73\u53f0\u5404\u4e2a\u5b50\u7cfb\u7edf
abc12366.api.url=http://testsys.chabc.net
abc12366.uc.url=http://127.0.0.1:9100/uc
abc12366.message.url=http://127.0.0.1:9200/message
abc12366.sns.url=http://127.0.0.1:9300/bangbang
abc12366.cms.url=http://127.0.0.1:9400/cms

# redis\u96c6\u7fa4\u914d\u7f6e
spring.redis.cluster.nodes[0]=118.118.116.202:7000
spring.redis.cluster.nodes[1]=118.118.116.202:7001
spring.redis.cluster.nodes[2]=118.118.116.202:7002
spring.redis.cluster.nodes[3]=118.118.116.202:7003
spring.redis.cluster.nodes[4]=118.118.116.202:7004
spring.redis.cluster.nodes[5]=118.118.116.202:7005
spring.redis.cluster.max-redirects=6
spring.redis.password=foobared

# kafka\u96c6\u7fa4\u914d\u7f6e
#spring.kafka.bootstrap-servers=118.118.116.202:9092
# kafka\u6d88\u8d39\u8005groupid
#spring.kafka.consumer.group-id=abc12366_message_group

# mysql
spring.datasource.db1.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.db1.url=jdbc:mysql://118.118.116.202:3306/abc12366_message?characterEncoding=utf8
spring.datasource.db1.username=abc12366
spring.datasource.db1.password=abc12366
spring.datasource.db1.driverClassName=com.mysql.jdbc.Driver
# \u4e0b\u9762\u4e3a\u8fde\u63a5\u6c60\u7684\u8865\u5145\u8bbe\u7f6e\uff0c\u5e94\u7528\u5230\u4e0a\u9762\u6240\u6709\u6570\u636e\u6e90\u4e2d
# \u521d\u59cb\u5316\u5927\u5c0f\uff0c\u6700\u5c0f\uff0c\u6700\u5927
spring.datasource.db1.initialSize=5
spring.datasource.db1.minIdle=5
spring.datasource.db1.maxActive=20
# \u914d\u7f6e\u83b7\u53d6\u8fde\u63a5\u7b49\u5f85\u8d85\u65f6\u7684\u65f6\u95f4
spring.datasource.db1.maxWait=60000
# \u914d\u7f6e\u95f4\u9694\u591a\u4e45\u624d\u8fdb\u884c\u4e00\u6b21\u68c0\u6d4b\uff0c\u68c0\u6d4b\u9700\u8981\u5173\u95ed\u7684\u7a7a\u95f2\u8fde\u63a5\uff0c\u5355\u4f4d\u662f\u6beb\u79d2
spring.datasource.db1.timeBetweenEvictionRunsMillis=60000
# \u914d\u7f6e\u4e00\u4e2a\u8fde\u63a5\u5728\u6c60\u4e2d\u6700\u5c0f\u751f\u5b58\u7684\u65f6\u95f4\uff0c\u5355\u4f4d\u662f\u6beb\u79d2
spring.datasource.db1.minEvictableIdleTimeMillis=300000
spring.datasource.db1.validationQuery=SELECT 'x'
spring.datasource.db1.testWhileIdle=true
spring.datasource.db1.testOnBorrow=false
spring.datasource.db1.testOnReturn=false
# \u6253\u5f00PSCache\uff0c\u5e76\u4e14\u6307\u5b9a\u6bcf\u4e2a\u8fde\u63a5\u4e0aPSCache\u7684\u5927\u5c0f
spring.datasource.db1.poolPreparedStatements=true
spring.datasource.db1.maxPoolPreparedStatementPerConnectionSize=20
# \u914d\u7f6e\u76d1\u63a7\u7edf\u8ba1\u62e6\u622a\u7684filters\uff0c\u53bb\u6389\u540e\u76d1\u63a7\u754c\u9762sql\u65e0\u6cd5\u7edf\u8ba1\uff0c'wall'\u7528\u4e8e\u9632\u706b\u5899
spring.datasource.db1.filters=stat,wall,slf4j
# \u901a\u8fc7connectProperties\u5c5e\u6027\u6765\u6253\u5f00mergeSql\u529f\u80fd\uff1b\u6162SQL\u8bb0\u5f55
spring.datasource.db1.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# \u5408\u5e76\u591a\u4e2aDruidDataSource\u7684\u76d1\u63a7\u6570\u636e
spring.datasource.db1.useGlobalDataSourceStat=true

# mysql
spring.datasource.db2.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.db2.url=jdbc:mysql://118.118.116.202:3306/abc12366_message?characterEncoding=utf8
spring.datasource.db2.username=abc12366_ro
spring.datasource.db2.password=abc12366
spring.datasource.db2.driverClassName=com.mysql.jdbc.Driver
# \u4e0b\u9762\u4e3a\u8fde\u63a5\u6c60\u7684\u8865\u5145\u8bbe\u7f6e\uff0c\u5e94\u7528\u5230\u4e0a\u9762\u6240\u6709\u6570\u636e\u6e90\u4e2d
# \u521d\u59cb\u5316\u5927\u5c0f\uff0c\u6700\u5c0f\uff0c\u6700\u5927
spring.datasource.db2.initialSize=5
spring.datasource.db2.minIdle=5
spring.datasource.db2.maxActive=20
# \u914d\u7f6e\u83b7\u53d6\u8fde\u63a5\u7b49\u5f85\u8d85\u65f6\u7684\u65f6\u95f4
spring.datasource.db2.maxWait=60000
# \u914d\u7f6e\u95f4\u9694\u591a\u4e45\u624d\u8fdb\u884c\u4e00\u6b21\u68c0\u6d4b\uff0c\u68c0\u6d4b\u9700\u8981\u5173\u95ed\u7684\u7a7a\u95f2\u8fde\u63a5\uff0c\u5355\u4f4d\u662f\u6beb\u79d2
spring.datasource.db2.timeBetweenEvictionRunsMillis=60000
# \u914d\u7f6e\u4e00\u4e2a\u8fde\u63a5\u5728\u6c60\u4e2d\u6700\u5c0f\u751f\u5b58\u7684\u65f6\u95f4\uff0c\u5355\u4f4d\u662f\u6beb\u79d2
spring.datasource.db2.minEvictableIdleTimeMillis=300000
spring.datasource.db2.validationQuery=SELECT 'x'
spring.datasource.db2.testWhileIdle=true
spring.datasource.db2.testOnBorrow=false
spring.datasource.db2.testOnReturn=false
# \u6253\u5f00PSCache\uff0c\u5e76\u4e14\u6307\u5b9a\u6bcf\u4e2a\u8fde\u63a5\u4e0aPSCache\u7684\u5927\u5c0f
spring.datasource.db2.poolPreparedStatements=true
spring.datasource.db2.maxPoolPreparedStatementPerConnectionSize=20
# \u914d\u7f6e\u76d1\u63a7\u7edf\u8ba1\u62e6\u622a\u7684filters\uff0c\u53bb\u6389\u540e\u76d1\u63a7\u754c\u9762sql\u65e0\u6cd5\u7edf\u8ba1\uff0c'wall'\u7528\u4e8e\u9632\u706b\u5899
spring.datasource.db2.filters=stat,wall,slf4j
# \u901a\u8fc7connectProperties\u5c5e\u6027\u6765\u6253\u5f00mergeSql\u529f\u80fd\uff1b\u6162SQL\u8bb0\u5f55
spring.datasource.db2.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# \u5408\u5e76\u591a\u4e2aDruidDataSource\u7684\u76d1\u63a7\u6570\u636e
spring.datasource.db2.useGlobalDataSourceStat=true

# \u7f51\u5173\u8bfb\u5199\u6570\u636e\u5e93
spring.datasource.gw1.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.gw1.url=jdbc:mysql://118.118.116.202:3306/abc12366_gateway?characterEncoding=utf8
spring.datasource.gw1.username=abc12366
spring.datasource.gw1.password=abc12366
spring.datasource.gw1.driverClassName=com.mysql.jdbc.Driver
# \u4e0b\u9762\u4e3a\u8fde\u63a5\u6c60\u7684\u8865\u5145\u8bbe\u7f6e\uff0c\u5e94\u7528\u5230\u4e0a\u9762\u6240\u6709\u6570\u636e\u6e90\u4e2d
# \u521d\u59cb\u5316\u5927\u5c0f\uff0c\u6700\u5c0f\uff0c\u6700\u5927
spring.datasource.gw1.initialSize=5
spring.datasource.gw1.minIdle=5
spring.datasource.gw1.maxActive=20
# \u914d\u7f6e\u83b7\u53d6\u8fde\u63a5\u7b49\u5f85\u8d85\u65f6\u7684\u65f6\u95f4
spring.datasource.gw1.maxWait=60000
# \u914d\u7f6e\u95f4\u9694\u591a\u4e45\u624d\u8fdb\u884c\u4e00\u6b21\u68c0\u6d4b\uff0c\u68c0\u6d4b\u9700\u8981\u5173\u95ed\u7684\u7a7a\u95f2\u8fde\u63a5\uff0c\u5355\u4f4d\u662f\u6beb\u79d2
spring.datasource.gw1.timeBetweenEvictionRunsMillis=60000
# \u914d\u7f6e\u4e00\u4e2a\u8fde\u63a5\u5728\u6c60\u4e2d\u6700\u5c0f\u751f\u5b58\u7684\u65f6\u95f4\uff0c\u5355\u4f4d\u662f\u6beb\u79d2
spring.datasource.gw1.minEvictableIdleTimeMillis=300000
spring.datasource.gw1.validationQuery=SELECT 'x'
spring.datasource.gw1.testWhileIdle=true
spring.datasource.gw1.testOnBorrow=false
spring.datasource.gw1.testOnReturn=false
# \u6253\u5f00PSCache\uff0c\u5e76\u4e14\u6307\u5b9a\u6bcf\u4e2a\u8fde\u63a5\u4e0aPSCache\u7684\u5927\u5c0f
spring.datasource.gw1.poolPreparedStatements=true
spring.datasource.gw1.maxPoolPreparedStatementPerConnectionSize=20
# \u914d\u7f6e\u76d1\u63a7\u7edf\u8ba1\u62e6\u622a\u7684filters\uff0c\u53bb\u6389\u540e\u76d1\u63a7\u754c\u9762sql\u65e0\u6cd5\u7edf\u8ba1\uff0c'wall'\u7528\u4e8e\u9632\u706b\u5899
spring.datasource.gw1.filters=stat,wall,slf4j
# \u901a\u8fc7connectProperties\u5c5e\u6027\u6765\u6253\u5f00mergeSql\u529f\u80fd\uff1b\u6162SQL\u8bb0\u5f55
spring.datasource.gw1.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# \u5408\u5e76\u591a\u4e2aDruidDataSource\u7684\u76d1\u63a7\u6570\u636e
spring.datasource.gw1.useGlobalDataSourceStat=true

# \u7f51\u5173\u53ea\u8bfb\u6570\u636e\u5e93
spring.datasource.gw2.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.gw2.url=jdbc:mysql://118.118.116.202:3306/abc12366_gateway?characterEncoding=utf8
spring.datasource.gw2.username=abc12366_ro
spring.datasource.gw2.password=abc12366
spring.datasource.gw2.driverClassName=com.mysql.jdbc.Driver
# \u4e0b\u9762\u4e3a\u8fde\u63a5\u6c60\u7684\u8865\u5145\u8bbe\u7f6e\uff0c\u5e94\u7528\u5230\u4e0a\u9762\u6240\u6709\u6570\u636e\u6e90\u4e2d
# \u521d\u59cb\u5316\u5927\u5c0f\uff0c\u6700\u5c0f\uff0c\u6700\u5927
spring.datasource.gw2.initialSize=5
spring.datasource.gw2.minIdle=5
spring.datasource.gw2.maxActive=20
# \u914d\u7f6e\u83b7\u53d6\u8fde\u63a5\u7b49\u5f85\u8d85\u65f6\u7684\u65f6\u95f4
spring.datasource.gw2.maxWait=60000
# \u914d\u7f6e\u95f4\u9694\u591a\u4e45\u624d\u8fdb\u884c\u4e00\u6b21\u68c0\u6d4b\uff0c\u68c0\u6d4b\u9700\u8981\u5173\u95ed\u7684\u7a7a\u95f2\u8fde\u63a5\uff0c\u5355\u4f4d\u662f\u6beb\u79d2
spring.datasource.gw2.timeBetweenEvictionRunsMillis=60000
# \u914d\u7f6e\u4e00\u4e2a\u8fde\u63a5\u5728\u6c60\u4e2d\u6700\u5c0f\u751f\u5b58\u7684\u65f6\u95f4\uff0c\u5355\u4f4d\u662f\u6beb\u79d2
spring.datasource.gw2.minEvictableIdleTimeMillis=300000
spring.datasource.gw2.validationQuery=SELECT 'x'
spring.datasource.gw2.testWhileIdle=true
spring.datasource.gw2.testOnBorrow=false
spring.datasource.gw2.testOnReturn=false
# \u6253\u5f00PSCache\uff0c\u5e76\u4e14\u6307\u5b9a\u6bcf\u4e2a\u8fde\u63a5\u4e0aPSCache\u7684\u5927\u5c0f
spring.datasource.gw2.poolPreparedStatements=true
spring.datasource.gw2.maxPoolPreparedStatementPerConnectionSize=20
# \u914d\u7f6e\u76d1\u63a7\u7edf\u8ba1\u62e6\u622a\u7684filters\uff0c\u53bb\u6389\u540e\u76d1\u63a7\u754c\u9762sql\u65e0\u6cd5\u7edf\u8ba1\uff0c'wall'\u7528\u4e8e\u9632\u706b\u5899
spring.datasource.gw2.filters=stat,wall,slf4j
# \u901a\u8fc7connectProperties\u5c5e\u6027\u6765\u6253\u5f00mergeSql\u529f\u80fd\uff1b\u6162SQL\u8bb0\u5f55
spring.datasource.gw2.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# \u5408\u5e76\u591a\u4e2aDruidDataSource\u7684\u76d1\u63a7\u6570\u636e
spring.datasource.gw2.useGlobalDataSourceStat=true

# logback\u65e5\u5fd7\u8def\u5f84
logging.path=${user.home}/abc12366
# logback\u914d\u7f6e\u8def\u5f84
logging.config=classpath:logback-spring.xml

#\u7f51\u6613\u77ed\u4fe1\u670d\u52a1\u63a5\u53e3\u5730\u5740
message.netease.api.url=https://api.netease.im/sms
#\u7f51\u6613\u77ed\u4fe1\u670d\u52a1appKey
message.netease.appKey=749390202fdd4d9da7c53163b3581531
#\u7f51\u6613\u77ed\u4fe1\u670d\u52a1appSecret
message.netease.appSecret=1369603dc1a5
#contentType
message.netease.contentType=application/x-www-form-urlencoded
#charset
message.netease.charset=utf-8
#\u7f51\u6613\u77ed\u4fe1\u670d\u52a1\u77ed\u4fe1\u6a21\u677fID
message.netease.templateid=3059771

#\u53c8\u62cd\u4e91\u77ed\u4fe1\u63a5\u53e3\u76f8\u5173\u914d\u7f6e
message.upyun.send.url=https://sms-api.upyun.com/api
#Authorization
message.upyun.auth=jXy3kmk4hshwJDmNli55vN8KZFaQjU
#template_id,\u53d1\u9001\u9a8c\u8bc1\u7801\u6a21\u677f
message.upyun.templateid=296
#template_id,\u53d1\u9001\u4e1a\u52a1\u901a\u77e5\u77ed\u4fe1\u6a21\u677f
message.upyun.inform.templateid=529

# \u56fe\u7247\u670d\u52a1\u5668\u4e0a\u4f20\u5730\u5740
sftp_host = 118.118.116.202
sftp_port = 22
sftp_username = root
sftp_password = hngs_123
sftp_imagesuri = /abc12366/images

#\u963f\u91cc\u4e91\u77ed\u4fe1\u914d\u7f6e
message.aliyun.accessid=LTAI9o3iWcBOfVIo
message.aliyun.accesskey=Ev2TDOBgnGn3zNroYRpYTnwkLjyLGw
message.aliyun.endpoint=https://1759980275870473.mns.cn-shenzhen.aliyuncs.com
message.aliyun.topic=sms.topic-cn-shenzhen
message.aliyun.signname=\u827e\u535a\u514b
#\u53d1\u9001\u9a8c\u8bc1\u7801\u5185\u5bb9\u6a21\u677f\u7f16\u7801
message.aliyun.templatecode=SMS_100835124
#\u53d1\u4e1a\u52a1\u901a\u77e5\u77ed\u4fe1\u5185\u5bb9\u6a21\u677f\u7f16\u7801
message.aliyun.inform.templatecode=SMS_105965044

dzsj.soa.url=http://testhn.abc12366.cn/wsbssoa/api
dzsj.soa.appId=CSZJ
dzsj.soa.secret=58F92E9C963D8332E0538F460C559C25

#\u56fd\u7a0e\u5730\u7a0e\u5355\u70b9\u767b\u5f55
hnds.url=http://wt.hnds.gov.cn/ajax.sword?ctrl=DZBSXTKJ022YhmMmDlCtrl_huNLocalTaxLogin
hnds.key=2017-09-27huNLocalTax